2013-11-15 sako
  どうやら TV王国は、1週前と直前でデータが更新されている模様。
  → 是非対応！

2013-11-15 sako
  まずはエンコードレート「単純チェック用」ということで、
  「最大構成データ」の「エンコードレートパターン」を作成する。
   パターン名称: 3-1 (サービス数:3 の Pattern:1)
    ・3サービス合計して 18 は越えないこと
    ・最小 4 も守ること
     → 10 + 4 + 4, 6 + 6 + 6, 4 + 6 + 8 の組み合わせで、更に位置を回す(まだらなし)

   パターン名称: 3-2 (サービス数:3 の Pattern:2)
     → (1,2,3), (1+2),3 , 1,(2+3), (1+3),2 といったまだらにして、14 + 4, 12 + 6, 10 + 8, 9 + 9 の組み合わせを回す

   場所 theParser.outputFormatBasic.getResultListByte() 場所 c:\Users\U500031\Documents\Visual Studio 2012\Projects\theParser\theParser\outputFormat.cs:行 775
   場所 theParser.parseMain.outputCsvFile(List`1 outList) 場所 c:\Users\U500031\Documents\Visual Studio 2012\Projects\theParser\theParser\parseMain.cs:行 1217


2013-11-12 sako
  まだら込み、エンコーダレートの試験用データについて
  ・大幅な変更(4Mbps -> 12Mbps といった、限界値を駆使する形で）
  ・一応、１ネットワーク内の最大値は守る。ただし、まだらの場合は従属組のレートを故意にプライマリと
    異なる値にする。（違ったらすぐ判るくらいの差を付ける）
  ・レート情報はEPGの番組詳細に記述。
  ・元となるEPGは、「稀にまだらがあるEPG（地上波番組表組み合わせ）」と、「5分と25分と60分イベントをランダムで
    散りばめて3日を埋めるEPGを作る。これを3つ横に並べ、「合致したイベントをまだらにする」奇策で。
    → 日またぎさせたい。
  ・毎日作る。その際、イベントIDは継続させたい。
    → 「既に配布済のデータを引き継ぐ機構」が必要。現状は常に上書きしている。
2013-11-07 sako
  InterBEE向け、EPGデータの作成


Service: 112
Title:  ショップチャンネル 8Mbps
Desc: ショップチャンネルは、ファッション、コスメ、家庭用品、健康グッズなど、世界中から厳選した商品を、生放送でご紹介。

TAG: URL      http://www.shopch.jp 
     TEL      フリーダイヤル:0120-000123
     番組詳細 商品の人気度や残量がリアルタイムでわかる、生放送ならではの臨場感をぜひ、お楽しみ下さい。 
         	  ご注文は24時間年中無休!  在庫状況により番組に変更が生じる場合がございます。ご了承ください。

5分毎に8Mbpsと10Mbpsを入れ替える。
11/13 9:30AM - 17:30 (96イベント)


Service:111
Title:  QVC 8Mbps
Desc: 世界最大24時間完全生放送のTVショッピングチャンネル<QVC>。

TAG: URL      http://qvc.jp (パソコン・携帯電話から)
     TEL      <ご注文> 0120-945-009 (アドバイザー) 0120-945-007 (音声自動応答)
     番組詳細 驚きの商品が、つぎつぎ登場しますので、欲しい商品を見つけたらスグにお電話ください。24時間、オペレーターが注文を承ります。 

5分毎に10Mbpsと8Mbpsを入れ替える。
11/13 9:30AM - 17:30 (96イベント)




2013-10-30 sako
  ・残件
    エンコーダレート: マルチ編成同士のイベントは同じ値を使う、それ以外は自由。← マルチ対応がまだ
    字幕スイッチ: マルチ編成無視してランダムで。 ← 忘れてた
    コピー制御: マルチ編成無視してランダムで。 ← 多分OK
      ※コピー情報、CopyControl値「0」を異常と判断されてえらい目にあった…
    Descriptionと拡張Descriptionに、今のイベントの解説を。
      マルチ中/なし
      解像度情報	  
      エンコーダレート
      字幕
      コピー制御
    
      

  マルチ編成、何とかなったかも。変換ソフトのエラーはなくなった。

  65406,00510,まだら01Main(111),madara,サコまだらtest01,1,1,111,HD,allkanji
  65406,00511,まだら01Sub1(112),madara,サコまだらtest01,1,1,112,HD
  65406,00520,まだら02Main(111),madara,サコまだらtest02,2,1,111,HD,101032
  65406,00521,まだら02Sub1(112),madara,サコまだらtest02,2,1,112,HD
  65406,00522,まだら02Sub2(113),madara,サコまだらtest02,2,1,113,HD



2013-10-25 sako
  マルチ編成（まだら放送）対応機能仕様
  ServiceFile.csv の今の仕様を拡張する。
+-----------------------------------------
|20120705223126,1
|65406,00018,mx-018,123608
|65406,00999,FORTEST1,101088
|65406,00010,MIL1,101024, noExtChar
|65406,00012,MIL2,101032, ExtChar
+-----------------------------------------
 <1>,<2>,<3>,<4>,<5>,<6>,<7>,<8>,<9>,…
  1: NetworkID っぽいもの。まぁ全部65406つけてればいいのでは？
  2: ServiceID っぽいもの。MEDT-02 に表示される。重複不可。
  3: ServiceName っぽいもの。MEDT-02 に表示される。日本語可。
  4: EPG情報の出元指定
     (数字)     ... URIの一部としてサイトから取得
     "allkanji" ... 全漢字評価試験用
     "madara"   ... まだら評価試験用
  5:以降は 4:の出元によって仕様が変わる。
     (数字)
      5:「ExtChar/noExtChar」  ... TV外字に出来そうな文字列をTV外字側に変換する。

     "allkanji"
      5:以降 不要

     "madara"
      5: まだらグループ名(日本語可) ← これが完全一致するものを１つのグループとする。
      6: まだらパターンタイプ  地上デジタル自主放送マルチ編成パターン仕様書より。パターン1〜12
      7: まだらパターン適応処理選択(0:ランダム、1:順序通り繰り返し、2:ランダムのレア(頻度 1/10)、3:ランダムのレア(頻度1/100)、4:ランダムのレア(頻度1/200)
      8: 変換後の ServiceID ← 同一グループ内で重複不可。
      9: 初期解像度 "HD" or "SD" → まだらが解けたらこれに戻す。
     10: このまだらを構成する EPG データ。「(数字)」or「allkanji」。まだらグループの先頭にのみ定義し、
         そのデータの作成は、本まだらサービスの行の前に１度は取得しておく必要がある。
         (まだらのデータは、その時に習得したキャッシュデータをアテにする）

例: Pattern 11 の場合
    パターン	Ch 111	Ch 112	Ch 113
    11-1          HD1     HD2      HD3
    11-2          HD1     (HD1)    HD3
    11-3          HD1     HD2      (HD1)
    11-4          HD1     (HD1)    (HD1)

65406,00018,mx-018,123608
65406,00530,まだらMain,madara,サコまだらtest,1,11,111,HD,123508
65406,00531,まだらSub1,madara,サコまだらtest,1,11,112,HD
65406,00532,まだらSub2,madara,サコまだらtest,1,11,113,HD
    0     1          2      3              4 5  6   7  8      9

処理: Service毎に出力する仕様なので…
  始動時、設定を取り込み、まだら設定を確認。
  まだらグループのサービスが来た時、そのサービス用の outList が空だったら
    まだら構成サービス分のデータを一気に作成する。
      そのサービスの全データ outList を作成し、まだら構成サービス分 copy して
      まだらパターンに応じてまだらにするイベントを適応処理選択ルールに基いて選択し
          まだら構成に書き換える。
      終わったら、そのサービス用の outList を登録して、
  サービス毎出力処理。


2013-10-25 sako
  構造思い出しを兼ねて、「全漢字用処理」を別 class へ移動。


2013-06-14 sako
  SJIS外字コードによる外字の出力について
  16進数４桁のリストを用意する。
  

2013-06-10 sako
  漢字コードをどうする？
  使えるパラメータは、先頭からカウントされる「index番号」
  → 目的は、ARIB 漢字表の網羅。
    → ARIB 漢字表を、順番に辿るクラスを用意して、それを "#(16進4桁);"×18文字＋改行、で単純データを作成してみる。
      → Title は、漢字集合表の名前を記述し、その長さ限界まで（越えないように）その表の中からランダムで文字を取得。
         表7-4(1)〜(8)
         (1) 0x21-0x39 , 0x21-0x4f
              例外: 0x2121-0x2132,0x222f-0x2238,0x2242-0x2249,0x2321-0x232f,0x233a-0x2340
                    0x2639-0x2640,0x2742-0x274f,0x2841-0x2f4f
         (2) 0x21-0x39 , 0x50-0x7e
              例外: 0x2251-0x225b,0x226b-0x2271, 0x227a-0x227d
                    0x235b-0x2360,0x237b-0x237e
                    0x2474-0x247e
                    0x2577-0x257e
                    0x2659-0x267e
                    0x2760-0x2760,0x277e-0x2f7e
         (3) 0x3a-0x4f , 0x21-0x4f
              例外なし
         (4) 0x3a-0x4f , 0x50-0x7e
              例外なし
         (5) 0x50-0x67 , 0x21-0x4f
              例外なし
         (6) 0x50-0x67 , 0x50-0x7e
              例外なし
         (7) 0x68-0x7e , 0x21-0x4f
              例外: 0x7427-0x794f, 0x7a27, 0x7a4c-0x7a4f, 0x7a32,0x7a33,0x7a49-0x7a4f
                    0x7d4e,0x7d4f
         (8) 0x68-0x7e , 0x50-0x7e
		      例外: 0x7450-0x7a5e,0x7a62-0x7a7e
                    0x7b52-0x7b7e,
                    0x7c7c-0x7c7e,
                    0x7d7c-0x7d7e,
                    0x7e7e


		 			  		 			  

         ※文字データ羅列で、表を越えた場合は次のイベントへ。
      → Describe は番組長に寄らず「全角80文字」ルール。表示上、おそらく20文字×4行が一番無難に見えると思うので…
         → Describe を以下に。
            -------------------------------------------
            映像:(*1),音声１:(*2),音声２:(*3)＋改行
            18文字＋改行
            18文字
            -------------------------------------------
         → Video は以下を使う。
           tag  00
           Typeと種類名 順番に。種類名は(*1)にも。Index % (種類数) で適合させる。
            01=480i,4:3
            03=480i,16:9
			04=480i,16:9以上
            A1=480p,4:3
			A3=480p,16:9
			A4=480p,16:9以上
            B1=1080i,4:3
			B3=1080i,16:9
			B4=1080i,16:9

         → Audio 以下を、Video同様、Indexの順番で適合させる。
            1ES 1音声
            1ES 2音声
            2ES 1音声 + 1音声
            2ES 2音声 + 1音声
            2ES 1音声 + 2音声
            2ES 2音声 + 2音声

            1音声毎に、要求される都度に以下を順番に取得し、加えてその日本語の名称を(*2),(*3)に
            並べる。					
            -------------------
			日本語:6A706E
			英語:656E67
			ドイツ語:646575
			フランス語:667261
			イタリア語:697461
			ロシア語:727573
			中国語:7A686F
			韓国語:6B6F72
			スペイン語:737061
			その他:657463
			なし:#
            -------------------

         → Genle
            
         → Copy		 		 
		 → Parental
		 → まだら は 今後
		 → Conetent利用記述 → 未対応でいいのかな？
         → エンコーダ記述子
		 → 字幕情報
		 → 詳細番組情報

2013-05-22 sako
・評価用、特別サービスの作成について
  ServiceFile.csv に、サービス名「変換ソフトテスト用」の名前が付いていた場合、
  そのサービスの出力は「MEDT-02評価用特殊文字、特殊運用用途のEPG元データ」を出力する。
  何が欲しい？
   1. 外字系
   2. 音声名（音声1,音声2、それぞれに二ヶ国語、音声コードとは関係なく)
   3. まだら放送 → これのために、サービス名は「変換ソフトテスト用1」「2」「3」を想定
   4. 20日分くらいまで出力可能に

   そこで…要件として。
   30分Eventと1時間Eventを交互に、20日分。
   1日2回、1-2 でまだら
   1日2回、2-3 でまだら
   1日1回、1-2-3 でまだら




2013-05-10 sako
・SVN管理開始
